{"componentChunkName":"component---src-pages-ibmcloud-hyper-protect-services-index-mdx","path":"/ibmcloud/hyper-protect-services/","result":{"pageContext":{"frontmatter":{"title":"Hyper Protect Services"},"relativePagePath":"/ibmcloud/hyper-protect-services/index.mdx","titleType":"page","MdxNode":{"id":"82b01a02-4d4e-5fc8-93c9-d57771672cfa","children":[],"parent":"8b51d004-3ab5-55e6-94e2-a69c3e79268f","internal":{"content":"---\ntitle: Hyper Protect Services\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\n\n</PageDescription>\n\n## **Overview**\n\nIBM Cloud® Hyper Protect Crypto Services (Hyper Protect Crypto Services for short) is a dedicated key management service and hardware security module (HSM)\nbased on IBM Cloud. With this service, you can take the ownership of the cloud HSM to fully manage your encryption keys and to perform cryptographic operations. Hyper Protect Crypto Services is also the only service in the cloud industry that is built on FIPS 140-2 Level 4-certified hardware\n\n\n## **Hyper Protect Crypto Services**\n\nHyper Protect Crypto Services integrates with Key Protect application programming interface (API) to generate and manage keys. The Keep Your Own Key (KYOK) function is also enabled to provide access to cloud-based cryptographic HSMs. You can access the network addressable HSMs by making standard PKCS #11 API calls or Enterprise PKCS #11 over gRPC (GREP11) API calls to perform cryptographic operations.\n\nYou can provision Hyper protect Crypto Services using IBM cloud catelog or using terraform script mentioned below:\n[Terraform module to provision Hyper protect Crypto service](https://github.com/cloud-native-toolkit/terraform-ibm-hpcs)\n\n## **Post install steps**\n\nOnce a Hyper Protect Crypto Service has been provisioned, it must be initialized before it can be used. Currently, the initialization process must be performed manually. The following steps must be followed to complete the initialization \n\n## Key Ceremony\n\n![Key Ceremony](images/Key-Initialization.png)\n\n## Here are the steps to initialize(Key ceremony) of HPCS\n\n## Install TKE CLI plun-in\n### ibmcloud plugin install tke\n\nSet the environment variable CLOUDTKEFILES on your workstation to specify the directory where you want to save the master key part files and signature key files. The signature keys are used to sign TKE administrative commands.\n\nOn the Linux® operating system or MacOS, add the following line to the .bash_profile file:\n\n### export CLOUDTKEFILES=[local-directory]\n\n## To display the service instances and crypto units in the target resource group under the current user account, use the following command:\n### ibmcloud tke cryptounits\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 false      OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 false      OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 false      RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 false      RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\n## To add extra crypto units to the selected crypto unit list, use the following command:\n### ibmcloud tke cryptounit-add\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 false      OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 false      OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 false      RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 false      RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\nEnter a list of CRYPTO UNIT NUM to add, separated by spaces:\n> 1 2\nOK\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 true       OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 true       OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 false      RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 false      RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\n\n## To add extra crypto units to the selected crypto unit list, use the following command:\n### ibmcloud tke cryptounit-add\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 true       OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 true       OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 false      RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 false      RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\nEnter a list of CRYPTO UNIT NUM to add, separated by spaces:\n> 3 4\nOK\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 true       OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 true       OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 true       RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 true       RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\n## You can compare the configuration settings of the selected crypto units with the following command:\n### ibmcloud tke cryptounit-compare\n\n\nSIGNATURE THRESHOLDS\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SIGNATURE THRESHOLD   REVOCATION THRESHOLD   \n1                 0                     0   \n2                 0                     0   \n\n==> Crypto units with a signature threshold of 0 are in IMPRINT MODE. <==\n\n\nCRYPTO UNIT ADMINISTRATORS\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   ADMIN NAME          SUBJECT KEY IDENTIFIER   \n1                 No administrators      \n2                 No administrators      \n\n\nNEW MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS   VERIFICATION PATTERN   \n1                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n2                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n\n\nCURRENT MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS   VERIFICATION PATTERN   \n1                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n2                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n\n\nCONTROL POINTS\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   XCP_CPB_ALG_EC_25519   XCP_CPB_BTC   XCP_CPB_ECDSA_OTHER   \n1                 Set                    Set           Set   \n2                 Set                    Not Set       Not Set   \n\n==> WARNING: Crypto units are configured differently. <==\n\n## To display the existing signature keys on the workstation, use the following command:\n### ibmcloud tke sigkeys\n\nNo files containing a signature key were found.\n\nTo create a file containing a signature key, use the 'ibmcloud tke sigkey-add' command.\n## To create and save a new signature key on the workstation, use the following command:\n### ibmcloud tke sigkey-add\n\n\nEnter an administrator name to be associated with the signature key:\n> john smith\nEnter a password to protect the signature key:\n> \nRe-enter the password to confirm:\n> \nOK\nA signature key was created.\nThe available signature keys on this workstation are:\n\nKEYNUM   DESCRIPTION   SUBJECT KEY IDENTIFIER   \n1        john smith    754adadbd731a5344c2e606b51993c...   \n\nNo KEYNUM are selected as current signature keys.\n\n\n## To select the administrators to sign future commands, use the command:\n### ibmcloud tke sigkey-sel\n\nKEYNUM   DESCRIPTION   SUBJECT KEY IDENTIFIER   \n1        john smith    754adadbd731a5344c2e606b51993c...   \n\nNo KEYNUM are selected as current signature keys.\n\nEnter the KEYNUM values to select as current signature keys, separated by spaces:\n> 1\nEnter the password for KEYNUM 1:\n> \nOK\nKEYNUM 1 has been made the current signature key.\n❯ ibmcloud tke cryptounit-admins\n\n\nNo crypto unit administrators for service instance 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\n## To display the existing administrators for a crypto unit, use the following command:\n### ibmcloud tke cryptounit-admins\n\nNo crypto unit administrators for service instance 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\n## To add an administrator, use the following command:\n### ibmcloud tke cryptounit-admin-add\n\nKEYNUM   DESCRIPTION   SUBJECT KEY IDENTIFIER   \n1        john smith    754adadbd731a5344c2e606b51993c...   \n\nKEYNUM 1 is selected as the current signature key.\n\nEnter the KEYNUM of the administrator signature key you wish to load:\n> 1\nEnter the password for the administrator signature key file:\n> \nOK\nThe crypto unit administrator was added to the selected crypto units.\n## Set quorum authentication thresholds,After you add one or more crypto unit administrators, exit imprint mode by using the command: \n### ibmcloud tke cryptounit-thrhld-set\n\nEnter the new signature threshold value:\n> 1\n\nEnter the new revocation signature threshold value:\n> 1\nEnter the password for the signature key identified by:\njohn smith (754adadbd731a5344c2e606b51993c...)\n> \nOK\nNew signature threshold values have been set in the selected crypto units.\n\nSIGNATURE THRESHOLDS\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SIGNATURE THRESHOLD   REVOCATION THRESHOLD   \n1                 1                     1   \n2                 1                     1   \n\n==> Crypto units with a signature threshold of 0 are in IMPRINT MODE. <==\n## To display the existing master key parts on the workstation, use the following command:\n### ibmcloud tke mks\n\nNo files containing an EP11 master key part were found.\n## To create and save a random master key part on the workstation, use the command:\n### ibmcloud tke mk-add –random\n\nEnter a description for the key part:\n> First key\nEnter a password to protect the key part:\n> \nRe-enter the password to confirm:\n> \nOK\nA key part was created.\nThe available EP11 master key parts on this workstation are:\n\nKEYNUM   DESCRIPTION   VERIFICATION PATTERN   \n1        First key     34c73048e81a08b69243dae23e8943bb   \n                       8874261d58bca67c4d308071ff2b6462\n## To create and save a second random master key part on the workstation:\n### ibmcloud tke mk-add –random\n\nEnter a description for the key part:\n> second key\nEnter a password to protect the key part:\n> \nRe-enter the password to confirm:\n> \nOK\nA key part was created.\nThe available EP11 master key parts on this workstation are:\n\nKEYNUM   DESCRIPTION   VERIFICATION PATTERN   \n1        First key     34c73048e81a08b69243dae23e8943bb   \n                       8874261d58bca67c4d308071ff2b6462   \n2        second key    ce7b7d2198de8f46195667e725b593fc   \n                       cfbc10e9c211d9bf80b358c2513ac18c\n\n\n## To load the new master key register, use the following command:\n### ibmcloud tke cryptounit-mk-load\n\n\nKEYNUM   DESCRIPTION   VERIFICATION PATTERN   \n1        First key     34c73048e81a08b69243dae23e8943bb   \n                       8874261d58bca67c4d308071ff2b6462   \n2        second key    ce7b7d2198de8f46195667e725b593fc   \n                       cfbc10e9c211d9bf80b358c2513ac18c   \n\nEnter the KEYNUM values of the master key parts you wish to load.\n2 or 3 values must be specified, separated by spaces.\n> 1 2\nEnter the password for the signature key identified by:\njohn smith (754adadbd731a5344c2e606b51993c...)\n> \nEnter the password for key file 1\n> \nEnter the password for key file 2\n> \nOK\nThe new master key register has been loaded in the selected crypto units.\n\nNEW MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS             VERIFICATION PATTERN   \n1                 Full Uncommitted   7a6ba030d18a0bc1c80abd5931bff8e3   \n                                     10154b88430968ee534ad01413dda886   \n2                 Full Uncommitted   7a6ba030d18a0bc1c80abd5931bff8e3   \n                                     10154b88430968ee534ad01413dda886  \n\n## To commit the new master key register, use the following command:\n### ibmcloud tke cryptounit-mk-commit\n\nEnter the password for the signature key identified by:\njohn smith (754adadbd731a5344c2e606b51993c...)\n> \nOK\nThe new master key register has been committed in the selected crypto units.\n\nNEW MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS           VERIFICATION PATTERN   \n1                 Full Committed   7a6ba030d18a0bc1c80abd5931bff8e3   \n                                   10154b88430968ee534ad01413dda886   \n2                 Full Committed   7a6ba030d18a0bc1c80abd5931bff8e3   \n                                   10154b88430968ee534ad01413dda886\n\n## Activate the master key by moving the master key to the current master key register with the following command:\n### ibmcloud tke cryptounit-mk-setimm\n\nWarning!  Any key storage associated with the targeted service instance must be prepared to accept the new master key value before running this command.  Otherwise, key storage may become unusable.\nDo you want to continue?\nAnswer [y/N]:\n> y\nEnter the password for the signature key identified by:\njohn smith (754adadbd731a5344c2e606b51993c...)\n> \nOK\nSet immediate completed successfully in the selected crypto units.\n\nNEW MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS   VERIFICATION PATTERN   \n1                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n2                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n\n\nCURRENT MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS   VERIFICATION PATTERN   \n1                 Valid    7a6ba030d18a0bc1c80abd5931bff8e3   \n                           10154b88430968ee534ad01413dda886   \n2                 Valid    7a6ba030d18a0bc1c80abd5931bff8e3   \n                           10154b88430968ee534ad01413dda886\n\nPlease refer https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-initialize-hsm for more detail:\n\n\n## **Hyper Protect DBaaS**\n\nIBM Cloud® Hyper Protect DBaaS provides tamper-proof, enterprise cloud database environments with high availability for workloads with sensitive data. It offers a flexible platform that allows you to easily provision and manage your database of choice (MongoDB and PostgreSQL), without data security concerns.\nBuilt on IBM LinuxONE technology, Hyper Protect DBaaS for MongoDB helps you to alleviate data security and compliance concerns with built-in encryption and tamper protection for data at rest and in flight. You can deploy your workloads with sensitive data and build compliant applications without having to be a security expert.\nHyper Protect DBaaS for MongoDB provides a reliable environment that allows you to become more agile in application development. You can quickly get started and move your mission-critical data to the highly available and managed database clusters, saving time and costs on operations. You can also flexibly adjust the amount of resources to meet your requirements.\n\nYou can provision Hyper protect DBaaS for MongoDB using IBM cloud catelog or using terraform script mentioned below:\n[Terraform module to provision Hyper protect DBaaS for MongoDB](https://github.com/cloud-native-toolkit/terraform-ibm-hpdbaas-mongodb)\n\n![Hyper protect DBAAS service instance](images/Hyper-protect-DBAAS-service-instance.png)\n\n## Hyper protect DBAAS service integration with Hyper protect crypto service\n\n![HPCS-HPDBaaS](images/HPCS-HPDBaaS.png)\n\n## **Hyper Protect Virtual Servers**\n\nIBM Cloud Hyper Protect Virtual Servers grant you complete authority over your Linux-based virtual servers for workloads that contain sensitive data and business IP. They offer a confidential computing environment, addressing your top security concerns for peace of mind when building applications in the cloud and helping you with the following issues:\n\n- Memory protection through a trusted execution environment\n- Data-at-rest and data-in-flight encryption\n- Prevention of unauthorized access\n\nYou can provision Hyper protect Virtual Servers using IBM cloud catelog or using terraform script mentioned below:\n[Terraform module to provision Hyper protect Virtual Servers](https://github.com/cloud-native-toolkit/terraform-ibm-vpc-vsi)\n\n\n## **Deploy application on Hyper Protect Virtual Server**\n\nThis Code Pattern is a node.js application that allows for the creation of keys, one for each \"team\" or \"service. It uses that key to encrypt some customer data, ahead of being stored in the database. In this way, it demonstrates the above example, while showing how to use the Key Protect RESTful API provided by an instance of IBM Cloud Hyper Protect Crypto Services. IBM Cloud Hyper Protect DBaaS for MongoDB is used as the database as it provides a standard MongoDB managed service, encrypted to anyone outside of the organisation with legitimate access to it. The application runs in a Docker container, for example on a Mac or Linux laptop, or following the directions below, on IBM Cloud Hyper Protect Virtual Servers, for runtime protection in the public cloud.\n\nWhen you have completed this code pattern, you will understand how to:\n\n- Build and run a Docker container\n- Get environment variables in a node.js app, from Docker\n- Create an IBM Cloud IAM API key\n- Drive the IBM Cloud Key Protect REST API, offered by IBM Cloud Hyper Protect Crypto Services\n\n![Architecture](images/architecture.png)\n\n[Deploy application on Hyper Protect Virtual Server](https://github.com/yogendrasri/secured-microservices-writing-to-a-consolidated-database)\n\n\n### **Resources**\n- [Hyper Protect crypto services](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started)\n- [Hyper Protect DBaaS for MongoDB](https://cloud.ibm.com/docs/hyper-protect-dbaas-for-mongodb?topic=hyper-protect-dbaas-for-mongodb-gettingstarted)\n- [yper Protect Virtual Servers](https://cloud.ibm.com/docs/hp-virtual-servers?topic=hp-virtual-servers-getting-started)\n\n","type":"Mdx","contentDigest":"b536cfa62a68a932b46159c84d94e114","counter":912,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Hyper Protect Services"},"exports":{},"rawBody":"---\ntitle: Hyper Protect Services\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\n\n</PageDescription>\n\n## **Overview**\n\nIBM Cloud® Hyper Protect Crypto Services (Hyper Protect Crypto Services for short) is a dedicated key management service and hardware security module (HSM)\nbased on IBM Cloud. With this service, you can take the ownership of the cloud HSM to fully manage your encryption keys and to perform cryptographic operations. Hyper Protect Crypto Services is also the only service in the cloud industry that is built on FIPS 140-2 Level 4-certified hardware\n\n\n## **Hyper Protect Crypto Services**\n\nHyper Protect Crypto Services integrates with Key Protect application programming interface (API) to generate and manage keys. The Keep Your Own Key (KYOK) function is also enabled to provide access to cloud-based cryptographic HSMs. You can access the network addressable HSMs by making standard PKCS #11 API calls or Enterprise PKCS #11 over gRPC (GREP11) API calls to perform cryptographic operations.\n\nYou can provision Hyper protect Crypto Services using IBM cloud catelog or using terraform script mentioned below:\n[Terraform module to provision Hyper protect Crypto service](https://github.com/cloud-native-toolkit/terraform-ibm-hpcs)\n\n## **Post install steps**\n\nOnce a Hyper Protect Crypto Service has been provisioned, it must be initialized before it can be used. Currently, the initialization process must be performed manually. The following steps must be followed to complete the initialization \n\n## Key Ceremony\n\n![Key Ceremony](images/Key-Initialization.png)\n\n## Here are the steps to initialize(Key ceremony) of HPCS\n\n## Install TKE CLI plun-in\n### ibmcloud plugin install tke\n\nSet the environment variable CLOUDTKEFILES on your workstation to specify the directory where you want to save the master key part files and signature key files. The signature keys are used to sign TKE administrative commands.\n\nOn the Linux® operating system or MacOS, add the following line to the .bash_profile file:\n\n### export CLOUDTKEFILES=[local-directory]\n\n## To display the service instances and crypto units in the target resource group under the current user account, use the following command:\n### ibmcloud tke cryptounits\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 false      OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 false      OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 false      RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 false      RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\n## To add extra crypto units to the selected crypto unit list, use the following command:\n### ibmcloud tke cryptounit-add\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 false      OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 false      OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 false      RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 false      RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\nEnter a list of CRYPTO UNIT NUM to add, separated by spaces:\n> 1 2\nOK\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 true       OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 true       OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 false      RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 false      RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\n\n## To add extra crypto units to the selected crypto unit list, use the following command:\n### ibmcloud tke cryptounit-add\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 true       OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 true       OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 false      RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 false      RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\nEnter a list of CRYPTO UNIT NUM to add, separated by spaces:\n> 3 4\nOK\n\nAPI endpoint:     https://cloud.ibm.com\nRegion:           us-south\nUser:             john.smith@in.abc.com\nAccount:          Cloud-Native Squad (0f0adc9ace07413f96e2214f4bc0c40b)\nResource group:   appdev-cloud-native\n\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SELECTED   TYPE          LOCATION   \n1                 true       OPERATIONAL   [us-south].[AZ2-CS5].[02].[06]   \n2                 true       OPERATIONAL   [us-south].[AZ3-CS9].[01].[15]   \n3                 true       RECOVERY      [us-south].[AZ3-CS9].[01].[14]   \n4                 true       RECOVERY      [us-east].[AZ1-CS1].[01].[07]   \n\nNote: all operational crypto units in a service instance must be configured the same.\nUse 'ibmcloud tke cryptounit-compare' to check how crypto units are configured.\n\n## You can compare the configuration settings of the selected crypto units with the following command:\n### ibmcloud tke cryptounit-compare\n\n\nSIGNATURE THRESHOLDS\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SIGNATURE THRESHOLD   REVOCATION THRESHOLD   \n1                 0                     0   \n2                 0                     0   \n\n==> Crypto units with a signature threshold of 0 are in IMPRINT MODE. <==\n\n\nCRYPTO UNIT ADMINISTRATORS\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   ADMIN NAME          SUBJECT KEY IDENTIFIER   \n1                 No administrators      \n2                 No administrators      \n\n\nNEW MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS   VERIFICATION PATTERN   \n1                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n2                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n\n\nCURRENT MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS   VERIFICATION PATTERN   \n1                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n2                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n\n\nCONTROL POINTS\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   XCP_CPB_ALG_EC_25519   XCP_CPB_BTC   XCP_CPB_ECDSA_OTHER   \n1                 Set                    Set           Set   \n2                 Set                    Not Set       Not Set   \n\n==> WARNING: Crypto units are configured differently. <==\n\n## To display the existing signature keys on the workstation, use the following command:\n### ibmcloud tke sigkeys\n\nNo files containing a signature key were found.\n\nTo create a file containing a signature key, use the 'ibmcloud tke sigkey-add' command.\n## To create and save a new signature key on the workstation, use the following command:\n### ibmcloud tke sigkey-add\n\n\nEnter an administrator name to be associated with the signature key:\n> john smith\nEnter a password to protect the signature key:\n> \nRe-enter the password to confirm:\n> \nOK\nA signature key was created.\nThe available signature keys on this workstation are:\n\nKEYNUM   DESCRIPTION   SUBJECT KEY IDENTIFIER   \n1        john smith    754adadbd731a5344c2e606b51993c...   \n\nNo KEYNUM are selected as current signature keys.\n\n\n## To select the administrators to sign future commands, use the command:\n### ibmcloud tke sigkey-sel\n\nKEYNUM   DESCRIPTION   SUBJECT KEY IDENTIFIER   \n1        john smith    754adadbd731a5344c2e606b51993c...   \n\nNo KEYNUM are selected as current signature keys.\n\nEnter the KEYNUM values to select as current signature keys, separated by spaces:\n> 1\nEnter the password for KEYNUM 1:\n> \nOK\nKEYNUM 1 has been made the current signature key.\n❯ ibmcloud tke cryptounit-admins\n\n\nNo crypto unit administrators for service instance 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\n## To display the existing administrators for a crypto unit, use the following command:\n### ibmcloud tke cryptounit-admins\n\nNo crypto unit administrators for service instance 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\n## To add an administrator, use the following command:\n### ibmcloud tke cryptounit-admin-add\n\nKEYNUM   DESCRIPTION   SUBJECT KEY IDENTIFIER   \n1        john smith    754adadbd731a5344c2e606b51993c...   \n\nKEYNUM 1 is selected as the current signature key.\n\nEnter the KEYNUM of the administrator signature key you wish to load:\n> 1\nEnter the password for the administrator signature key file:\n> \nOK\nThe crypto unit administrator was added to the selected crypto units.\n## Set quorum authentication thresholds,After you add one or more crypto unit administrators, exit imprint mode by using the command: \n### ibmcloud tke cryptounit-thrhld-set\n\nEnter the new signature threshold value:\n> 1\n\nEnter the new revocation signature threshold value:\n> 1\nEnter the password for the signature key identified by:\njohn smith (754adadbd731a5344c2e606b51993c...)\n> \nOK\nNew signature threshold values have been set in the selected crypto units.\n\nSIGNATURE THRESHOLDS\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   SIGNATURE THRESHOLD   REVOCATION THRESHOLD   \n1                 1                     1   \n2                 1                     1   \n\n==> Crypto units with a signature threshold of 0 are in IMPRINT MODE. <==\n## To display the existing master key parts on the workstation, use the following command:\n### ibmcloud tke mks\n\nNo files containing an EP11 master key part were found.\n## To create and save a random master key part on the workstation, use the command:\n### ibmcloud tke mk-add –random\n\nEnter a description for the key part:\n> First key\nEnter a password to protect the key part:\n> \nRe-enter the password to confirm:\n> \nOK\nA key part was created.\nThe available EP11 master key parts on this workstation are:\n\nKEYNUM   DESCRIPTION   VERIFICATION PATTERN   \n1        First key     34c73048e81a08b69243dae23e8943bb   \n                       8874261d58bca67c4d308071ff2b6462\n## To create and save a second random master key part on the workstation:\n### ibmcloud tke mk-add –random\n\nEnter a description for the key part:\n> second key\nEnter a password to protect the key part:\n> \nRe-enter the password to confirm:\n> \nOK\nA key part was created.\nThe available EP11 master key parts on this workstation are:\n\nKEYNUM   DESCRIPTION   VERIFICATION PATTERN   \n1        First key     34c73048e81a08b69243dae23e8943bb   \n                       8874261d58bca67c4d308071ff2b6462   \n2        second key    ce7b7d2198de8f46195667e725b593fc   \n                       cfbc10e9c211d9bf80b358c2513ac18c\n\n\n## To load the new master key register, use the following command:\n### ibmcloud tke cryptounit-mk-load\n\n\nKEYNUM   DESCRIPTION   VERIFICATION PATTERN   \n1        First key     34c73048e81a08b69243dae23e8943bb   \n                       8874261d58bca67c4d308071ff2b6462   \n2        second key    ce7b7d2198de8f46195667e725b593fc   \n                       cfbc10e9c211d9bf80b358c2513ac18c   \n\nEnter the KEYNUM values of the master key parts you wish to load.\n2 or 3 values must be specified, separated by spaces.\n> 1 2\nEnter the password for the signature key identified by:\njohn smith (754adadbd731a5344c2e606b51993c...)\n> \nEnter the password for key file 1\n> \nEnter the password for key file 2\n> \nOK\nThe new master key register has been loaded in the selected crypto units.\n\nNEW MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS             VERIFICATION PATTERN   \n1                 Full Uncommitted   7a6ba030d18a0bc1c80abd5931bff8e3   \n                                     10154b88430968ee534ad01413dda886   \n2                 Full Uncommitted   7a6ba030d18a0bc1c80abd5931bff8e3   \n                                     10154b88430968ee534ad01413dda886  \n\n## To commit the new master key register, use the following command:\n### ibmcloud tke cryptounit-mk-commit\n\nEnter the password for the signature key identified by:\njohn smith (754adadbd731a5344c2e606b51993c...)\n> \nOK\nThe new master key register has been committed in the selected crypto units.\n\nNEW MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS           VERIFICATION PATTERN   \n1                 Full Committed   7a6ba030d18a0bc1c80abd5931bff8e3   \n                                   10154b88430968ee534ad01413dda886   \n2                 Full Committed   7a6ba030d18a0bc1c80abd5931bff8e3   \n                                   10154b88430968ee534ad01413dda886\n\n## Activate the master key by moving the master key to the current master key register with the following command:\n### ibmcloud tke cryptounit-mk-setimm\n\nWarning!  Any key storage associated with the targeted service instance must be prepared to accept the new master key value before running this command.  Otherwise, key storage may become unusable.\nDo you want to continue?\nAnswer [y/N]:\n> y\nEnter the password for the signature key identified by:\njohn smith (754adadbd731a5344c2e606b51993c...)\n> \nOK\nSet immediate completed successfully in the selected crypto units.\n\nNEW MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS   VERIFICATION PATTERN   \n1                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n2                 Empty    00000000000000000000000000000000   \n                           00000000000000000000000000000000   \n\n\nCURRENT MASTER KEY REGISTER\nSERVICE INSTANCE: 4dd3b774-ddce-4b20-bb12-fd01d84fb92f\nCRYPTO UNIT NUM   STATUS   VERIFICATION PATTERN   \n1                 Valid    7a6ba030d18a0bc1c80abd5931bff8e3   \n                           10154b88430968ee534ad01413dda886   \n2                 Valid    7a6ba030d18a0bc1c80abd5931bff8e3   \n                           10154b88430968ee534ad01413dda886\n\nPlease refer https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-initialize-hsm for more detail:\n\n\n## **Hyper Protect DBaaS**\n\nIBM Cloud® Hyper Protect DBaaS provides tamper-proof, enterprise cloud database environments with high availability for workloads with sensitive data. It offers a flexible platform that allows you to easily provision and manage your database of choice (MongoDB and PostgreSQL), without data security concerns.\nBuilt on IBM LinuxONE technology, Hyper Protect DBaaS for MongoDB helps you to alleviate data security and compliance concerns with built-in encryption and tamper protection for data at rest and in flight. You can deploy your workloads with sensitive data and build compliant applications without having to be a security expert.\nHyper Protect DBaaS for MongoDB provides a reliable environment that allows you to become more agile in application development. You can quickly get started and move your mission-critical data to the highly available and managed database clusters, saving time and costs on operations. You can also flexibly adjust the amount of resources to meet your requirements.\n\nYou can provision Hyper protect DBaaS for MongoDB using IBM cloud catelog or using terraform script mentioned below:\n[Terraform module to provision Hyper protect DBaaS for MongoDB](https://github.com/cloud-native-toolkit/terraform-ibm-hpdbaas-mongodb)\n\n![Hyper protect DBAAS service instance](images/Hyper-protect-DBAAS-service-instance.png)\n\n## Hyper protect DBAAS service integration with Hyper protect crypto service\n\n![HPCS-HPDBaaS](images/HPCS-HPDBaaS.png)\n\n## **Hyper Protect Virtual Servers**\n\nIBM Cloud Hyper Protect Virtual Servers grant you complete authority over your Linux-based virtual servers for workloads that contain sensitive data and business IP. They offer a confidential computing environment, addressing your top security concerns for peace of mind when building applications in the cloud and helping you with the following issues:\n\n- Memory protection through a trusted execution environment\n- Data-at-rest and data-in-flight encryption\n- Prevention of unauthorized access\n\nYou can provision Hyper protect Virtual Servers using IBM cloud catelog or using terraform script mentioned below:\n[Terraform module to provision Hyper protect Virtual Servers](https://github.com/cloud-native-toolkit/terraform-ibm-vpc-vsi)\n\n\n## **Deploy application on Hyper Protect Virtual Server**\n\nThis Code Pattern is a node.js application that allows for the creation of keys, one for each \"team\" or \"service. It uses that key to encrypt some customer data, ahead of being stored in the database. In this way, it demonstrates the above example, while showing how to use the Key Protect RESTful API provided by an instance of IBM Cloud Hyper Protect Crypto Services. IBM Cloud Hyper Protect DBaaS for MongoDB is used as the database as it provides a standard MongoDB managed service, encrypted to anyone outside of the organisation with legitimate access to it. The application runs in a Docker container, for example on a Mac or Linux laptop, or following the directions below, on IBM Cloud Hyper Protect Virtual Servers, for runtime protection in the public cloud.\n\nWhen you have completed this code pattern, you will understand how to:\n\n- Build and run a Docker container\n- Get environment variables in a node.js app, from Docker\n- Create an IBM Cloud IAM API key\n- Drive the IBM Cloud Key Protect REST API, offered by IBM Cloud Hyper Protect Crypto Services\n\n![Architecture](images/architecture.png)\n\n[Deploy application on Hyper Protect Virtual Server](https://github.com/yogendrasri/secured-microservices-writing-to-a-consolidated-database)\n\n\n### **Resources**\n- [Hyper Protect crypto services](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started)\n- [Hyper Protect DBaaS for MongoDB](https://cloud.ibm.com/docs/hyper-protect-dbaas-for-mongodb?topic=hyper-protect-dbaas-for-mongodb-gettingstarted)\n- [yper Protect Virtual Servers](https://cloud.ibm.com/docs/hp-virtual-servers?topic=hp-virtual-servers-getting-started)\n\n","fileAbsolutePath":"/home/runner/work/ibm-enterprise-runbooks/ibm-enterprise-runbooks/src/pages/ibmcloud/hyper-protect-services/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","243517648","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550","817386451"]}