{"componentChunkName":"component---src-pages-ibmcloud-kms-roks-index-mdx","path":"/ibmcloud/kms-roks/","result":{"pageContext":{"frontmatter":{"title":"Key Management Service Integration with ROKS (Managed Redhat Openshift Kubernetes Services)"},"relativePagePath":"/ibmcloud/kms-roks/index.mdx","titleType":"page","MdxNode":{"id":"d0b7eede-8d11-57f3-8fd9-0def8932493c","children":[],"parent":"50180ea6-3052-5e1f-be0b-39489a2eb27c","internal":{"content":"---\ntitle: Key Management Service Integration with ROKS (Managed Redhat Openshift Kubernetes Services)\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\n\n</PageDescription>\n\n## **Overview**\n\nProtecting the sensitive information in the Red Hat OpenShift on IBM Cloud cluster to ensure data integrity and to prevent the data from being exposed to unauthorized users using IBM Key Protect. The below procedure is applicable to the ROKS cluster, only on IBM Cloud.\n\nThe sensitive data at different levels in the cluster, will require appropriate protection.\n\n- Cluster-level: Cluster configuration data is stored in the etcd component of the OpenShift master. Data in etcd is stored on the local disk of the OpenShift master and is backed up to IBM Cloud Object Storage. Data is encrypted during transit to IBM Cloud Object Storage and at rest. To achieve encryption for the etcd data on the local disk of your OpenShift master, is by enabling the key management service provider (IBM Key Protect) for the cluster.\n\n- App-level: When the application is deployed, do not store confidential information, such as credentials or keys, in the YAML configuration file, configmaps, or scripts. Instead, use Kubernetes secrets, such as an imagePullSecret for registry credentials. This helps to encrypt data in Kubernetes secrets to prevent unauthorized users from accessing sensitive app information.\n\nIBM Key Protect for IBM Cloud helps in provision encrypted keys for apps across IBM Cloud services. This provides the benefit of securing the keys by FIPS 140-2 Level 3 certified cloud-based hardware security modules (HSMs) that protect against the theft of information. The Key Protect interface simplifies the management of multiple encryption services. This service provides the ability to manage and sort encryption keys in one centralized location, or can separate keys by project and house them in different IBM Cloud spaces.\n\nThe below diagram depicts the IBM Key Managament Service integration with the Openshift cluster\n\n![keymanagement with openshift-1](images/kms.png)\n\n\n## **Install**\n\nSteps to set up the key management service integration with ROKS.\n\n- Setup the IBM key protect service\n- Setup the root key\n- Configure the root key to the ROKS cluster\n\n### **Setup IBM Key Protect Service**\n\n- Login to IBM Cloud\n- Access the IBM Cloud catalog\n- Filter/Search for the Key Protect service (part of the security category)\n- select the service(Key Protect) and navigate to the create page\n- Provide the input parameters and click create button to provision the IBM Key Protect Service \n\n### **Setup the root key**\n\n- Access the provisioned Key Protect instance\n- Access the 'Manage 'Keys' tab in the left nav\n- Now click on the 'Add Key' button\n- you have a choice to create a new key or import your own key option. create a 'root key', for the cluster to be secured.\n![setup-rootkey](images/rootkey-creation.png)\n\n**Note:**  Ensure you don't delete this root key, after you have encrypted the cluster\n\n\n\n### **Enable KMS to the ROKS cluster**\n\nFollow the below user interface approach to enable the kMS for the cluster\n\n- Access the ROKS cluster that is provisioned \n- Navigate to the Dashboard on the cluster\n- As part of the dashboard, you should be able to see the \"Key management service\" and along side the Enable button, as depicted below\n![enable-kms-roks](images/roks-kms-enable.jpg)\n\n- Click on the \"Key management service\" Enable button to enable the KMS for the cluster\n- Now select the Key management service that you have provisioned and the root key from the drop down options appear in the pop up screen\n- Click on the Enable option to enable the KMS for the cluster \n![enable-kms](images/enable-kms.png)\n\n**Note** Ensure the root key should not be deleted from the IBM Key Protect, once the root key is activated to the cluster\n\n**Note** \nyou can also enable the KMS using CLI based approach for the cluster as per the below reference:\n- [Setting up KMS for ROKS using CLI](https://cloud.ibm.com/docs/openshift?topic=openshift-encryption)\n\n","type":"Mdx","contentDigest":"9ad33be4904db1c88131ec8c63fe150d","counter":923,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Key Management Service Integration with ROKS (Managed Redhat Openshift Kubernetes Services)"},"exports":{},"rawBody":"---\ntitle: Key Management Service Integration with ROKS (Managed Redhat Openshift Kubernetes Services)\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\n\n</PageDescription>\n\n## **Overview**\n\nProtecting the sensitive information in the Red Hat OpenShift on IBM Cloud cluster to ensure data integrity and to prevent the data from being exposed to unauthorized users using IBM Key Protect. The below procedure is applicable to the ROKS cluster, only on IBM Cloud.\n\nThe sensitive data at different levels in the cluster, will require appropriate protection.\n\n- Cluster-level: Cluster configuration data is stored in the etcd component of the OpenShift master. Data in etcd is stored on the local disk of the OpenShift master and is backed up to IBM Cloud Object Storage. Data is encrypted during transit to IBM Cloud Object Storage and at rest. To achieve encryption for the etcd data on the local disk of your OpenShift master, is by enabling the key management service provider (IBM Key Protect) for the cluster.\n\n- App-level: When the application is deployed, do not store confidential information, such as credentials or keys, in the YAML configuration file, configmaps, or scripts. Instead, use Kubernetes secrets, such as an imagePullSecret for registry credentials. This helps to encrypt data in Kubernetes secrets to prevent unauthorized users from accessing sensitive app information.\n\nIBM Key Protect for IBM Cloud helps in provision encrypted keys for apps across IBM Cloud services. This provides the benefit of securing the keys by FIPS 140-2 Level 3 certified cloud-based hardware security modules (HSMs) that protect against the theft of information. The Key Protect interface simplifies the management of multiple encryption services. This service provides the ability to manage and sort encryption keys in one centralized location, or can separate keys by project and house them in different IBM Cloud spaces.\n\nThe below diagram depicts the IBM Key Managament Service integration with the Openshift cluster\n\n![keymanagement with openshift-1](images/kms.png)\n\n\n## **Install**\n\nSteps to set up the key management service integration with ROKS.\n\n- Setup the IBM key protect service\n- Setup the root key\n- Configure the root key to the ROKS cluster\n\n### **Setup IBM Key Protect Service**\n\n- Login to IBM Cloud\n- Access the IBM Cloud catalog\n- Filter/Search for the Key Protect service (part of the security category)\n- select the service(Key Protect) and navigate to the create page\n- Provide the input parameters and click create button to provision the IBM Key Protect Service \n\n### **Setup the root key**\n\n- Access the provisioned Key Protect instance\n- Access the 'Manage 'Keys' tab in the left nav\n- Now click on the 'Add Key' button\n- you have a choice to create a new key or import your own key option. create a 'root key', for the cluster to be secured.\n![setup-rootkey](images/rootkey-creation.png)\n\n**Note:**  Ensure you don't delete this root key, after you have encrypted the cluster\n\n\n\n### **Enable KMS to the ROKS cluster**\n\nFollow the below user interface approach to enable the kMS for the cluster\n\n- Access the ROKS cluster that is provisioned \n- Navigate to the Dashboard on the cluster\n- As part of the dashboard, you should be able to see the \"Key management service\" and along side the Enable button, as depicted below\n![enable-kms-roks](images/roks-kms-enable.jpg)\n\n- Click on the \"Key management service\" Enable button to enable the KMS for the cluster\n- Now select the Key management service that you have provisioned and the root key from the drop down options appear in the pop up screen\n- Click on the Enable option to enable the KMS for the cluster \n![enable-kms](images/enable-kms.png)\n\n**Note** Ensure the root key should not be deleted from the IBM Key Protect, once the root key is activated to the cluster\n\n**Note** \nyou can also enable the KMS using CLI based approach for the cluster as per the below reference:\n- [Setting up KMS for ROKS using CLI](https://cloud.ibm.com/docs/openshift?topic=openshift-encryption)\n\n","fileAbsolutePath":"/home/runner/work/ibm-enterprise-runbooks/ibm-enterprise-runbooks/src/pages/ibmcloud/kms-roks/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","243517648","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550","817386451"]}