{"componentChunkName":"component---src-pages-install-cloud-native-index-mdx","path":"/install/cloud-native/","result":{"pageContext":{"frontmatter":{"title":"Cloud Native install on OpenShift"},"relativePagePath":"/install/cloud-native/index.mdx","titleType":"page","MdxNode":{"id":"566fea95-f459-500b-90e8-43e2e5040457","children":[],"parent":"304aa7e4-64e0-55da-b5d8-0f7df3f998e5","internal":{"content":"---\ntitle: Cloud Native install on OpenShift\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\n\n\n</PageDescription>\n\n### **1. Finalize the schedule & mode of delivery for the workshop**\n- Webex: 4 days x 2.5hours\n- Self Paced\n- In Person: 1 day x 8.5 hours\n\n### **2. Identify primary mentor for the journey**\n\n### **3.  Collect the data required for the sessions from the participants**\n[Participant Data Collection Sheet](Participant_Data_Sheet.xlsx)\n\n### **4.  Github setup**\n- Create a github organization: **SI-Name**-sandbox-team-n..\n- Add all participants as members of the organization.\n\n### **5. Slack Channel Setup**\nSet up a new slack channel (**SI-Name**-cloudnative) and add all participants\n\n### **6. IBM Cloud Setup**\n- Create resource group **sandbox-team-n..** under the SI Account to be used for the worksop\n\n- Create access groups **SANDBOX-TEAM-N..-ADMIN** and **SANDBOX-TEAM-N..-USER** and make all users part of the SANDBOX-TEAM-ONE-USER group.\n\n- Run these scripts to create access groups from iteration-zero repository\n```bash\n./acp-admin.sh SANDBOX-TEAM-ONE-ADMIN sandbox-team-one\n./acp-user.sh SANDBOX-TEAM-ONE-USER sandbox-team-one us-east\n```\n- Board all users by adding them to access group SANDBOX-TEAM-N..-USER \n\n### **7. Cluster Setup**\n- Setup a redhat openshift cluster (sandbox-ocp43-n..) in London datacenter with 3 worker nodes (16 cores x 32 GB)\n\n### **8. Cloud-Native Toolkit Setup**\na) Install Cloud-Native toolkit onto the OCP Cluster (Follow instructions outlined in https://cloudnativetoolkit.dev/admin/installation-existing)\n\n- [Install Tekton tasks](https://github.com/IBM/ibm-garage-tekton-tasks/tree/master)\n- [Artifactory Post Install Setup] (https://cloudnativetoolkit.dev/admin/artifactory-setup)\n- [argocd Post Install Setup] (https://cloudnativetoolkit.dev/admin/argocd-setup)\n- [Install Codeready workspaces] (https://cloudnativetoolkit.dev/admin/config-install#codeready-workspace-installation)\n\nb) Customize dashboard to include crw, github links (replace links for your cluster)\n```bash\nigc tool-config --name sysdig --url https://us-east.monitoring.cloud.ibm.com/api/oauth/openid/IBM/0f42478cb66d4ce0b11c9168b02c5690/e0caebc1-92c0-46a5-b6d0-ef4ba28bd5ed\nigc tool-config --name logdna --url https://app.us-east.logging.cloud.ibm.com/ext/ibm-sso/38d0b85d06\nigc tool-config --name ir --url https://cloud.ibm.com/kubernetes/registry/main/start\nigc tool-config --name github --url https://github.com/ibm-workshop-team-one\nigc tool-config --name codeready --url https://codeready-codeready.workshop-ocp43-one-3b1fc50af0b2002f0241bdf5d2432efd-0000.sjc03.containers.appdomain.cloud/dashboard/\n```\n\nc) Customize redhat openshit to include shortcuts to all tools\n\nd) Finish the sysdig dashboard setip\n\n### **10. Smoke test**\nTest access control.\nAdd personal id to SANDBOX-ONE-USER access group.\nLog into IBM Cloud as the personal id and run the following test cases:\n\n- Check only the resources assigned to sandbox: 1 cluster and 2 services under sandbox-team-one resource group should be visible.\n- Try creating a service. You should get an access denied error.\n- Go to Billing->Usage: You should be able to view, but should not be able to change anything.\n- Try creating a resource group/access group. It should get permission errors.\n- Go to Classic Infrastructure. Should give access denied error.\n- Reboot a worker node. Should not be a allowed operation.\n- Check if sysdig instance created by Cloud-Native toolkit is collecting metrics from the resorces, and if it is not, set those up.\n- Run pipelines of some starter kits and make sure they work.\n- Check links from openshift and dashboard.\n\n### **11. Setup completed inventory solution with continous delivery (argocd)**\n\n### **12. Install CP4A on the openshift cluster**\n- Run schematics to install CP4A on openshift.\n- Add Transformation Advisor (TA) link to the dashboard and openshift shortcut.\n```bash\nigc tool-config --name ta --url url-for-ta\n```\n- Add shortcut to TA from openshift.\n\n### **13. Database setup for Application Modernization**\n- Create the Db2 Service from the IBM Cloud Catalogue.For Testing and demo purpose use Lite plan. For the workshop with developers hands-on, set it up with paid plan(Flex Plan).\n![CreateDB2](/images/05SandBoxRunBook.png)\n- Provide the name for the service as \"PlantsDB\" and create the service.  Please note the service is also provisioned in the same region as the Openshift cluster to avoid latency.\n- Once you create the service, Navigate to the **'Service  Credential tab'** in the left Nav and create a new credential for the Db2 service. Capture the details as this would be needed for the application.\n- Now Click 'Manage tab' and click **'Open Console'**  button.\n- Click on the Run option in the top left nav, which should open the SQL Editor.\n- Execute the DDL Scripts to create the Database for the Plants application (Refer PlantsDB-create.sql in the box folder).\n- Execute the Insert scripts to populate data for the Plants application (Refer Populate-PlantsDB.sql in the box folder).\n- Navigate to the **'connectioninfo'** tab and select the option 'without-sso'. Capture the Connection Details as well which is needed for the application\n\n### **14. Email the Participants**\nSend an email to all participants inviting them to the sandbox journeys.\n[Email Template](emailtemplate.txt)\n\n### **15. Skill Collection Matrix, Games**\nSetup menti templates for collecting skills of participants, fun games\n\n### **16. Feedback Collection**\nSetup funreto template for collecting feedback (What went right, what can be improved, Any other feedback)\n","type":"Mdx","contentDigest":"869d79ff154d40e2bfcfefbbd01cf3bd","counter":865,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Cloud Native install on OpenShift"},"exports":{},"rawBody":"---\ntitle: Cloud Native install on OpenShift\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\n\n\n</PageDescription>\n\n### **1. Finalize the schedule & mode of delivery for the workshop**\n- Webex: 4 days x 2.5hours\n- Self Paced\n- In Person: 1 day x 8.5 hours\n\n### **2. Identify primary mentor for the journey**\n\n### **3.  Collect the data required for the sessions from the participants**\n[Participant Data Collection Sheet](Participant_Data_Sheet.xlsx)\n\n### **4.  Github setup**\n- Create a github organization: **SI-Name**-sandbox-team-n..\n- Add all participants as members of the organization.\n\n### **5. Slack Channel Setup**\nSet up a new slack channel (**SI-Name**-cloudnative) and add all participants\n\n### **6. IBM Cloud Setup**\n- Create resource group **sandbox-team-n..** under the SI Account to be used for the worksop\n\n- Create access groups **SANDBOX-TEAM-N..-ADMIN** and **SANDBOX-TEAM-N..-USER** and make all users part of the SANDBOX-TEAM-ONE-USER group.\n\n- Run these scripts to create access groups from iteration-zero repository\n```bash\n./acp-admin.sh SANDBOX-TEAM-ONE-ADMIN sandbox-team-one\n./acp-user.sh SANDBOX-TEAM-ONE-USER sandbox-team-one us-east\n```\n- Board all users by adding them to access group SANDBOX-TEAM-N..-USER \n\n### **7. Cluster Setup**\n- Setup a redhat openshift cluster (sandbox-ocp43-n..) in London datacenter with 3 worker nodes (16 cores x 32 GB)\n\n### **8. Cloud-Native Toolkit Setup**\na) Install Cloud-Native toolkit onto the OCP Cluster (Follow instructions outlined in https://cloudnativetoolkit.dev/admin/installation-existing)\n\n- [Install Tekton tasks](https://github.com/IBM/ibm-garage-tekton-tasks/tree/master)\n- [Artifactory Post Install Setup] (https://cloudnativetoolkit.dev/admin/artifactory-setup)\n- [argocd Post Install Setup] (https://cloudnativetoolkit.dev/admin/argocd-setup)\n- [Install Codeready workspaces] (https://cloudnativetoolkit.dev/admin/config-install#codeready-workspace-installation)\n\nb) Customize dashboard to include crw, github links (replace links for your cluster)\n```bash\nigc tool-config --name sysdig --url https://us-east.monitoring.cloud.ibm.com/api/oauth/openid/IBM/0f42478cb66d4ce0b11c9168b02c5690/e0caebc1-92c0-46a5-b6d0-ef4ba28bd5ed\nigc tool-config --name logdna --url https://app.us-east.logging.cloud.ibm.com/ext/ibm-sso/38d0b85d06\nigc tool-config --name ir --url https://cloud.ibm.com/kubernetes/registry/main/start\nigc tool-config --name github --url https://github.com/ibm-workshop-team-one\nigc tool-config --name codeready --url https://codeready-codeready.workshop-ocp43-one-3b1fc50af0b2002f0241bdf5d2432efd-0000.sjc03.containers.appdomain.cloud/dashboard/\n```\n\nc) Customize redhat openshit to include shortcuts to all tools\n\nd) Finish the sysdig dashboard setip\n\n### **10. Smoke test**\nTest access control.\nAdd personal id to SANDBOX-ONE-USER access group.\nLog into IBM Cloud as the personal id and run the following test cases:\n\n- Check only the resources assigned to sandbox: 1 cluster and 2 services under sandbox-team-one resource group should be visible.\n- Try creating a service. You should get an access denied error.\n- Go to Billing->Usage: You should be able to view, but should not be able to change anything.\n- Try creating a resource group/access group. It should get permission errors.\n- Go to Classic Infrastructure. Should give access denied error.\n- Reboot a worker node. Should not be a allowed operation.\n- Check if sysdig instance created by Cloud-Native toolkit is collecting metrics from the resorces, and if it is not, set those up.\n- Run pipelines of some starter kits and make sure they work.\n- Check links from openshift and dashboard.\n\n### **11. Setup completed inventory solution with continous delivery (argocd)**\n\n### **12. Install CP4A on the openshift cluster**\n- Run schematics to install CP4A on openshift.\n- Add Transformation Advisor (TA) link to the dashboard and openshift shortcut.\n```bash\nigc tool-config --name ta --url url-for-ta\n```\n- Add shortcut to TA from openshift.\n\n### **13. Database setup for Application Modernization**\n- Create the Db2 Service from the IBM Cloud Catalogue.For Testing and demo purpose use Lite plan. For the workshop with developers hands-on, set it up with paid plan(Flex Plan).\n![CreateDB2](/images/05SandBoxRunBook.png)\n- Provide the name for the service as \"PlantsDB\" and create the service.  Please note the service is also provisioned in the same region as the Openshift cluster to avoid latency.\n- Once you create the service, Navigate to the **'Service  Credential tab'** in the left Nav and create a new credential for the Db2 service. Capture the details as this would be needed for the application.\n- Now Click 'Manage tab' and click **'Open Console'**  button.\n- Click on the Run option in the top left nav, which should open the SQL Editor.\n- Execute the DDL Scripts to create the Database for the Plants application (Refer PlantsDB-create.sql in the box folder).\n- Execute the Insert scripts to populate data for the Plants application (Refer Populate-PlantsDB.sql in the box folder).\n- Navigate to the **'connectioninfo'** tab and select the option 'without-sso'. Capture the Connection Details as well which is needed for the application\n\n### **14. Email the Participants**\nSend an email to all participants inviting them to the sandbox journeys.\n[Email Template](emailtemplate.txt)\n\n### **15. Skill Collection Matrix, Games**\nSetup menti templates for collecting skills of participants, fun games\n\n### **16. Feedback Collection**\nSetup funreto template for collecting feedback (What went right, what can be improved, Any other feedback)\n","fileAbsolutePath":"/home/runner/work/ibm-enterprise-runbooks/ibm-enterprise-runbooks/src/pages/install/cloud-native/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","243517648","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550","817386451"]}